git clone https://github.com/olliefr/docker-gs-ping

go run main.go
curl http://localhost:8080/

docker build --tag docker-gs-ping .
docker image ls
docker image tag docker-gs-ping:latest docker-gs-ping:v1.0
docker image rm docker-gs-ping:v1.0

docker build -t docker-gs-ping:multistage -f Dockerfile.multistage .

docker run docker-gs-ping
docker run --publish 8080:8080 docker-gs-ping
docker run -d -p 8080:8080 docker-gs-ping
docker run -d -p 8080:8080 --name rest-server docker-gs-ping
curl http://localhost:8080/

docker volume create roach
docker volume list
docker network create -d bridge mynet
docker network list

docker run -d \
  --name roach \
  --hostname db \
  --network mynet \
  -p 26257:26257 \
  -p 8080:8080 \
  -v roach:/cockroach/cockroach-data \
  cockroachdb/cockroach:latest-v20.1 start-single-node \
  --insecure

docker exec -it roach ./cockroach sql --insecure
CREATE DATABASE mydb;
CREATE USER totoro;
GRANT ALL ON DATABASE mydb TO totoro;
sudo docker exec -it roach ./cockroach sql --insecure

git clone https://github.com/olliefr/docker-gs-ping-roach.git

docker build --tag docker-gs-ping-roach .
docker run -it --rm -d \
  --network mynet \
  --name rest-server \
  -p 80:8080 \
  -e PGUSER=totoro \
  -e PGPASSWORD=myfriend \
  -e PGHOST=db \
  -e PGPORT=26257 \
  -e PGDATABASE=mydb \
  docker-gs-ping-roach
curl localhost
curl http://localhost/
docker container rm --force rest-server

url --request POST \
  --url http://localhost/send \
  --header 'content-type: application/json' \
  --data '{"value": "Hello, Docker!"}'
curl --request POST \
  --url http://localhost/send \
  --header 'content-type: application/json' \
  --data '{"value": "Hello, Oliver!"}'
curl localhost
docker container stop rest-server roach
docker container rm rest-server roach
docker container list --all

docker run -d \
  --name roach \
  --hostname db \
  --network mynet \
  -p 26257:26257 \
  -p 8080:8080 \
  -v roach:/cockroach/cockroach-data \
  cockroachdb/cockroach:latest-v20.1 start-single-node \
  --insecure
docker run -it --rm -d \
  --network mynet \
  --name rest-server \
  -p 80:8080 \
  -e PGUSER=totoro \
  -e PGPASSWORD=myfriend \
  -e PGHOST=db \
  -e PGPORT=26257 \
  -e PGDATABASE=mydb \
  docker-gs-ping-roach
	curl localhost

docker-compose config
docker-compose up --build
docker exec -it roach ./cockroach sql --insecure
curl http://localhost/

docker-compose up --build -d

docker build -t docker-gs-ping:latest .
go test ./...
go test -v ./...

git tag -a 0.0.1 -m "Test release workflow"
git push --tags

git push origin :refs/tags/0.0.1
git tag -fa 0.0.1 -m "Test release workflow"
git push origin --tags
docker pull olliefr/docker-gs-ping
